개념 정의: 제어의 역행
(Inversion of control: IOC)

구현 정의: 의존성 주입
(Dependency Injection: DI)
-싱글톤

DAO dao = new DAO();
//객체주소를 프로그래머가 만듦 
@Repository => 객체주소를 Spring이 만듬
public class DAO{
	----
}

-싱글톤

타입으로 만들어진 객체의 주소를
찾아서 내가 만들어 놓은
변수(dao)에다 넣어 준다.
의존성 주입

@Autowired
DAO dao;

dao.insert

의존성이 구체적으로 나타날수록
수정이 많이 필요한 코드가 되어버림.

class Car{
	Window w;
	Wheel wh;
}


추상 클래스와 인터페이스의 관계
공통점
-----
-추상 메소드를 가진다.
-객체 생성 불사능
-타입으로 쓸 수 있다.(업캐스팅의 대상이 된다.)

차이점
-----
- 변수(인터페이스X, 추상클래스O)
- 일반메소드(인터페이스X, 추상클래스O)

추상 클래스와 인터페이스는 타입으로 쓸 수 있다
의존성(결합도)를 낮추기 위해 형변환을 사용한다.

디자인 패턴 -> 팩토리 기법.

1. 자바 프로젝트를 설계시 주의해야 할 점 2가지
	(설계원칙) - 결합도, 응집도
	: 응집도가 높아야 하고 결합도(의존성)가 낮아야 한다.
2. 결합도를 낮추는 방법 3가지
	: 1.인터페이스 사용
	  2.형변환 사용
	  3.팩토리 기법 사용
3. context파일이란, 역할
	: 객체를 모아서 한번에 실행시켜주는 파일로,
	한번 저장해두면 다른곳에서 가져다 쓰기만 하면 되게 만들어 주는 것이다.
4. spring container라고 부르는 이유는?
	: 내부에 존재하는 애플리케이션의 객체를 관리 한다.
	많은 객체를 가질 수 있기 때문에 컨테이너라고 한다.
5. IOC란?
	:제어 역행이라는 뜻으로 프로그래머가 해야 할 일을
	spring이 해주는 것을 이야기 한다.
6. DI란?
	:의존성 주입으로 프로젝트 디자인 패턴중 하나이다.
	의존성을 줄여 수정시 용이하게 한다.
7. 결합도와 의존성이란?
	:결합도와 의존성이란 어떠한 프로젝트가 다른 프로젝트에 의존하는 정도를 의미한다
	이는 다른 프로젝트가 실행이 안 되면 전부 실행이 안 되기 때문에 수정시에 굉장히 힘들다.