인터 페이스란 강제성을 띄고 있다.
클래스는 구현을 안해도 상관 없지만 인터페이스는 구현을 할때 까지 실행이 안됨.

인터페이스
-implements
-객체 생성 불가능
-추상 메소드만 가질 수 있다.
-일반 변수 사용 불가능 => 동적인 특징 x
-항상 public abstract =>(추상적: 불완전) 어디서든 사용가능해야 함.
-인터페이스 끼리 상속이 가능.
	public interface circle extends shape 이런 것이 가능.
-클래스의 상속은 단일 상속
-인터페이스의 상속은 다중 상속
-다중 인터페이스 구현 가능
		implements A, B, C

		
일반 클래스는 인터페이스에 반대 격


-익명 클래스
객체를 생성한 것이 아닌 임의의 클래스를 생성한 것과 비슷한 역할을 하는 것.
-인터 페이스
객체 생성을 할 수 없으며, 강제성을 띄고 있는 추상적인 클래스. 일반 변수는 사용이 불가능 하다.
-형변환
작은 메모리에 있는 것을 큰 메모리에 넣거나 큰 메모리에 있는 것을 작은 메모리에 넣을 때 크기에 맞추어 넣는 것을 의미한다.
-자동형변환, 강제형변환
자동형변환은 작은 메모리가 큰 메모리에 들어 갈때 자동으로 줄여주는 형변환이고, 강제형변환은 큰 메모리가 작은 메모리에 들어갈 때 강제로 맞추어 넣는 형변환이다.
-upcasting(자식 - > 부모), downcasting(부모 -> 자식)
-인터페이스와 클래스와의 관계
인터페이스를 implements 받은 클래스는 인터페이스에 있는 메소드를 사용 할 수 있으며, 여러개의 인터페이스를 implements할 수 있다.(다중 상속 가능)
-다형성
인터페이스는 상속받은 자식 클래스가 항상 인터페이스의 있는 같은 이름의 변수를 강제로 써야 하므로, 다형성이다.
-인터페이스 사용 방법 3가지
		1) 인터페이스를 구현한 클래스를 만든다.
			다른 클래스에서 위 클래스를 사용한다.
		2) 인터페이스를 구현한 클래스와 사용하는 클래스를
			하나에 만들어주고 사용한다.
		3) 이벤트 처리할 때 마다 인터페이스를 익명 클래스로 만들어
			메소드를 구체적으로 재정의 한다.