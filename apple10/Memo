IOC-@Bean, @Component, @Service, @Repository

DI-@Autowired(type으로 찾음) -> @Qualifier(name으로 찾음): 타입이 같고 이름이 다를 때, @Inject(name으로 찾음) => 객체 조립(클래스)
AOP=> 메서드조립
DAO, DTO - model역할
myBatis - dao역할
MVC2 - model, view, control 부분을 나눠서 만듬
MVT(파이썬)


AOP

핵심 메소드의 앞/뒤에 공통 메소드를 삽입
AOP실행시, 우리가 삽입할 기준인 핵심 메소드는 모두 사용된다.

핵심메소드는 포인트컷이 될 수 있는 후보가 됩니다.
후보가 되는 핵심메소드를 조인포인트라고 한다.

조인포인트에서 실제로 사용 되는 핵심 메소드를 포인트 컷이라고 한다. 

AOP(관점지향형 프로그램)
=> 관점 지향형 프로그래밍
1) 공통관점과 핵심관점을 나누어서 프로그래밍
2) 공통관점에 해당하는 기능을 묶어서 별도의 클래스 만들어 놓는다.
3) 핵심관점을 가진 클래스를 만든다.
4) 실행시 핵심관점 사이에 공통관점을 끼워넣는다.

-공통관점+핵심관점
-공통 관점은 별도의 클래스 만들어 두어야 함.
(관점클래스: Aspect Class)
-위치 충괴 advice(before, after)
		return-call. error-call, around
		
조인포인트 > 포인트 컷
		
스프링의 AOP Container(대리 설계: proxy기법)

weaving(위빙, 직조하다, 짜기)
로그인
개인정보보기
로그아웃